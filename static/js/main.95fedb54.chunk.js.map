{"version":3,"sources":["components/Characters/luke.jpg","components/Characters/boba.jpg","components/Characters/c3po.png","components/Characters/chewbacca.png","components/Characters/darthSidious.png","components/Characters/darthVader.png","components/Characters/han.jpg","components/Characters/leia.jpg","components/Characters/obiWan.jpg","components/Characters/r2d2.png","components/Characters/tarkin.jpg","components/card.js","components/CardList.js","components/ErrorBoundry.js","components/Scroll.js","components/SearchBox.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","name","world","specie","films","pp","luke","c3po","r2d2","darthVader","leia","obiWan","tarkin","chewbacca","han","darthSidious","boba","className","src","alt","height","width","CardList","names","map","user","i","key","side","ErrorBoundry","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","SearchBox","searchChange","type","placeholder","onChange","App","onSearchChange","event","searchfield","target","value","characters","homeworld","species","users","urls","length","push","chars","hws","spcs","flms","Promise","all","fetch","then","resp","json","hw","sp","filterCharacters","filter","toLowerCase","includes","romanFilms","mapFilms","fl","replace","parseInt","romanNums","sort","rNum","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.95fedb54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/luke.cd8f129d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/boba.01d85fb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/c3po.21e4022c.png\";","module.exports = __webpack_public_path__ + \"static/media/chewbacca.16895859.png\";","module.exports = __webpack_public_path__ + \"static/media/darthSidious.392b78fb.png\";","module.exports = __webpack_public_path__ + \"static/media/darthVader.c9b11593.png\";","module.exports = __webpack_public_path__ + \"static/media/han.19c19a48.jpg\";","module.exports = __webpack_public_path__ + \"static/media/leia.4a8096f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/obiWan.9ef5741a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/r2d2.d441920a.png\";","module.exports = __webpack_public_path__ + \"static/media/tarkin.b1d6f073.jpg\";","import React from 'react';\r\nimport luke from './Characters/luke.jpg'\r\nimport boba from './Characters/boba.jpg'\r\nimport c3po from './Characters/c3po.png'\r\nimport chewbacca from './Characters/chewbacca.png'\r\nimport darthSidious from './Characters/darthSidious.png'\r\nimport darthVader from './Characters/darthVader.png'\r\nimport han from './Characters/han.jpg'\r\nimport leia from './Characters/leia.jpg'\r\nimport obiWan from './Characters/obiWan.jpg'\r\nimport r2d2 from './Characters/r2d2.png'\r\nimport tarkin from './Characters/tarkin.jpg'\r\nimport './card.css';\r\n\r\nconst Card = (props) => {\r\n    const { name, world, specie, films } = props;\r\n    let pp = '';\r\n    switch (name) {\r\n        case 'Luke Skywalker':\r\n            pp = luke;\r\n            break;\r\n        case 'C-3PO':\r\n            pp = c3po;\r\n            break;\r\n        case 'R2-D2':\r\n            pp = r2d2;\r\n            break;\r\n        case 'Darth Vader':\r\n            pp = darthVader;\r\n            break;\r\n        case 'Leia Organa':\r\n            pp = leia;\r\n            break;\r\n        case 'Obi-Wan Kenobi':\r\n            pp = obiWan;\r\n            break;\r\n        case 'Wilhuff Tarkin':\r\n            pp = tarkin;\r\n            break;\r\n        case 'Chewbacca':\r\n            pp = chewbacca;\r\n            break;\r\n        case 'Han Solo':\r\n            pp = han;\r\n            break;\r\n        case 'Palpatine':\r\n            pp = darthSidious;\r\n            break;\r\n        case 'Boba Fett':\r\n            pp = boba;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <div className='cardstyle'>\r\n                <h1>{name}</h1>\r\n                <img src={pp} alt=\"\" height=\"250\" width=\"200\" />\r\n                <div className='info'>\r\n                    <p>Homeworld: {world}</p>\r\n                    <p>Specie: {specie}</p>\r\n                    <p>Episode {films + ','}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card; ","import React from 'react';\r\nimport Card from './card';\r\nimport './CardList.css';\r\n\r\nconst CardList = ({ names, world, specie, films }) => {\r\n    //const rebels = [0, 1, 2, 4, 9, 12, 13];\r\n    //const empire = [3, 11, 19, 20];\r\n\r\n    return (\r\n        <div className='wow'>\r\n            {\r\n                names.map((user, i) => {\r\n                    if (true) {\r\n                        return (\r\n                            <Card\r\n                                key={i}\r\n                                side={\"rebels\"}\r\n                                name={names[i]}\r\n                                world={world[i]}\r\n                                specie={specie[i]}\r\n                                films={films[i]}\r\n                            />\r\n                        );\r\n                    }\r\n                    if (true) {\r\n                        return (\r\n                            <Card\r\n                                key={i}\r\n                                side={\"empire\"}\r\n                                name={names[i]}\r\n                                world={world[i]}\r\n                                specie={specie[i]}\r\n                                films={films[i]}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oops. Something went wrong</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', height: '500px' }} >\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='sb' >\r\n            <input\r\n                type='search'\r\n                placeholder='Search...'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { Component, Fragment } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\n//import Tab from './Tab';\n//import Card from './card';\nimport CardList from '../components/CardList';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Scroll from '../components/Scroll'\nimport SearchBox from '../components/SearchBox'\n\n\nclass App extends Component {\n  constructor() {\n    // @ts-ignore\n    super();\n    this.state = {\n      characters: [],\n      homeworld: [],\n      species: [],\n      films: [],\n      searchfield: ''\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n\n  }\n\n  componentDidMount() {\n    //const rebels = [0, 1, 2, 4, 9, 12, 13];\n    //const empire = [3, 11, 19, 20];\n    const users = [1, 2, 3, 4, 5, 10, 12, 13, 14, 21, 22]\n\n    let urls = [];\n\n    for (let i = 0; i < users.length; i++) {\n\n      urls.push(\"https://swapi.co/api/people/\" + users[i] + \"/\")\n    }//creates an array of all the urls we will use\n\n    let chars = [];\n    let hws = [];\n    let spcs = [];\n    let flms = [];\n    Promise.all(urls.map(value => {\n      return fetch(value).then(resp => resp.json())\n    })).then(user => {\n      for (let i = 0; i < urls.length; i++) {\n        chars.push(user[i].name);\n        hws.push(user[i].homeworld);\n        spcs.push(user[i].species);\n        flms.push(user[i].films);\n\n      }\n\n      this.setState({ characters: chars });\n      this.setState({ homeworld: hws });\n      this.setState({ species: spcs });\n      this.setState({ films: flms });\n\n      let { homeworld } = this.state;\n      hws = [];\n      //console.log(homeworld);\n\n      Promise.all(homeworld.map(value => {\n        return fetch(value).then(resp => resp.json())\n      })).then(hw => {\n        for (let i = 0; i < urls.length; i++) {\n          hws.push(hw[i].name);\n\n          //console.log(hws);\n        }\n        this.setState({ homeworld: hws });\n      })\n\n      let { species } = this.state;\n      spcs = [];\n\n      Promise.all(species.map(value => {\n        return fetch(value).then(resp => resp.json())\n      })).then(sp => {\n        for (let i = 0; i < urls.length; i++) {\n          spcs.push(sp[i].name);\n\n          //console.log(hws);\n        }\n        this.setState({ species: spcs });\n      })\n\n\n    })\n\n\n  }\n\n  render() {\n    ///filter\n    const filterCharacters = this.state.characters.filter(chars => {\n      return chars.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n\n    let romanFilms = [];\n    const { species, homeworld, films } = this.state;\n    //console.log(characters);\n    //console.log(films);\n    for (let i = 0; i < films.length; i++) {\n      //console.log(films[0]);\n      let mapFilms = films[i].map(fl => {\n        fl = fl.replace('https://swapi.co/api/films/', '');\n        fl = fl.replace('/', '');\n        return parseInt(fl);\n      })\n\n      mapFilms = mapFilms.sort();\n      //console.log(mapFilms);\n      const romanNums = mapFilms.map(fl => {\n        let rNum;\n        switch (fl) {\n          case 1:\n            rNum = 'IV';\n            break;\n          case 2:\n            rNum = 'V';\n            break;\n          case 3:\n            rNum = 'VI';\n            break;\n          case 4:\n            rNum = 'I';\n            break;\n          case 5:\n            rNum = 'II';\n            break;\n          case 6:\n            rNum = 'III';\n            break;\n          case 7:\n            rNum = 'VII';\n            break;\n          case 8:\n            rNum = 'VIII';\n            break;\n          case 9:\n            rNum = 'IX';\n            break;\n          default:\n            break;\n        }\n        return rNum;\n      })\n      //console.log(romanNums);\n      romanFilms.push(romanNums);\n    }\n\n    if ((homeworld.length > 0 && homeworld[0].includes('http')) || species.length > 0 && species[0][0].includes('https')) {\n      return <h1 className='intro'>A long time ago in a galaxy far, far away...</h1>\n    }\n    else {\n      return (\n        <Fragment>\n          <div className='top'>\n            <h1 >Star Wars Cards</h1>\n            <SearchBox searchChange={this.onSearchChange} />\n          </div>\n          <Scroll>\n            <ErrorBoundry>\n              <CardList names={filterCharacters} world={homeworld} specie={species} films={romanFilms} />\n            </ErrorBoundry>\n          </Scroll>\n        </Fragment>\n      );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}